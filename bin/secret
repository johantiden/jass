#!/usr/bin/env bash
set -e

CMD="${1}"

function require {
    if ! command -v "${1}" &> /dev/null; then
        echo "secret requires '${1}' to be installed. Please install it first! See ${2}"
        exit
    fi
}

require pass "https://www.passwordstore.org/"
require rq "https://github.com/dflemstr/rq/blob/master/doc/installation.md"
require jq "https://stedolan.github.io/jq/"

function usage {
    echo "Usage:"
    echo ""
    echo "secret insert PASSPATH [user pass]"
    echo " where PASSPATH is a standard 'pass' path."
    echo " This will interactively help you insert your credentials in the right format."
    echo "  Example: secret insert github"
    echo "  Example: secret insert github foo@example.com password123 # One line possible but highly discouraged for obvious reasons!"
    echo ""
    echo "OR"
    echo ""
    echo "secret PASSPATH [FIELD]"
    echo " where FIELD is either 'user' or 'pass'"
    echo " if FIELD is empty, the whole pass file is printed (same as calling 'pass PASSPATH')"
    echo "  Example: secret github user"
    echo "  Example: secret github pass"
}

function secret-get {
    local PASSPATH="${1}"
    local KEY="${2}"

    if [[ "${KEY}" == "" ]]; then
      pass "${PASSPATH}"
    else
      if [[ "${KEY}" == "pass" ]]; then
          pass "${PASSPATH}" | head -1
      else
          pass "${PASSPATH}" | tail +2 | rq -y | jq -r ".${KEY}"
      fi
    fi
}

function secret-insert {
    local PASSPATH="${1}"
    local USER="${2}"
    local PASS="${3}"

    if [[ "${PASSPATH}" == "" ]]; then
        read -p 'path: ' PASSPATH
    fi
    echo "PASSPATH: ${PASSPATH}"

    if [[ "${USER}" == "" ]]; then
        read -p 'user: ' USER
    fi
    if [[ "${PASS}" == "" ]]; then
        read -sp 'pass: ' PASS
    fi

    echo
    
    {
        echo "${PASS}"
        echo "user: ${USER}"
    } | pass insert -fm "${PASSPATH}" &> /dev/null

}

if [[ "${CMD}" == "" ]]; then
    usage
elif [[ "${CMD}" == "insert" ]]; then
    secret-insert "${2:-}"
else
    secret-get "${@}"
fi


